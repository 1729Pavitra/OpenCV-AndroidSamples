apply plugin: 'com.android.model.application'

model {
    android {
        compileSdkVersion = 22
        buildToolsVersion = "23.0.0"

        defaultConfig.with {
            applicationId = "com.jnardari.opencv_androidsamples"
            minSdkVersion.apiLevel = 10
            targetSdkVersion.apiLevel = 22
            versionCode = 1
            versionName = "1.0"
        }
    }

    android.buildTypes {
        release {
            minifyEnabled = false
            proguardFiles += file('proguard-rules.pro')
        }
    }

    /*
     * native build settings
     */
    android.ndk {
        abiFilters += ["armeabi", "armeabi-v7a"]

        // Link with static OpenCV libraries: the order is important!
        // The following order taken from OpenCV.mk
        def opencv_modules = ["shape", "stitching", "objdetect", "superres", "videostab", "calib3d", "features2d", "highgui", "videoio", "imgcodecs", "video", "photo", "ml", "imgproc", "flann", "core", "hal"]

        moduleName = "ndklibrarysample"
        //ldLibs += ['log']
        // -g debug mode
        cppFlags += ["-g", "-ltbb", "-std=c++11", "-fexceptions", "-frtti"]
        cppFlags  += "-I${file("C:/Users/jnardari/Desktop/OpenCV-android-sdk/sdk/native/jni/include")}".toString()
        //cppFlags  += "-I${file("C:/Users/jnardari/Desktop/OpenCV-android-sdk/sdk/native/jni/include/opencv")}".toString()
        //cppFlags  += "-I${file("C:/Users/jnardari/Desktop/OpenCV-android-sdk/sdk/native/jni/include/opencv2")}".toString()
        //ldFlags += linkOpt
        ldLibs += ["android", "EGL", "GLESv2", "dl", "log", "z"]// , "ibopencv_core"
        stl = "gnustl_static"//"gnustl_static"//"gnustl_shared"//"stlport_static"

        abiFilters.each { targetAbi ->
            println targetAbi

            opencv_modules.each{ module ->
                ldLibs += file(projectDir).absolutePath + "/src/main/jniLibs/" + targetAbi + "/libopencv_" + module + ".a"
                println module
            }

            ldLibs += file(projectDir).absolutePath + "/src/main/jniLibs/" + targetAbi + "/libtbb.a"
        }
    }

    android.productFlavors {

        create("arm") {
            ndk.with {

                abiFilters += "armeabi"
                println "*** building for arm"
            }

        }

        create("armv7") {
            ndk.with {

                abiFilters += "armeabi-v7a"
                println "*** building for armv7"
            }

        }

        /*create("x86") {
            ndk.with {
                abiFilters += "x86"
                println "*** building for x86"
            }
        }*/
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile project(':libraries:opencv')
}
